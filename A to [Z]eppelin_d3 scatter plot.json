{"paragraphs":[{"text":"%angular setup script\n<script src = \"https://d3js.org/d3.v4.min.js\"></script>\n<!-- Plugin for color scale -->\n<script src=\"https://d3js.org/d3-scale-chromatic.v1.min.js\"></script>\n\n<!-- Tooltip style -->\n<style>\n.tooltip {\n  background-color: black;\n  border: none;\n  border-radius: 5px;\n  padding: 15px;\n  min-width: 400px;\n  text-align: left;\n  color: white;\n}\n</style>","user":"anonymous","dateUpdated":"2019-11-19T09:47:25-0500","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/undefined","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"setup script\n<script src = \"https://d3js.org/d3.v4.min.js\"></script>\n<!-- Plugin for color scale -->\n<script src=\"https://d3js.org/d3-scale-chromatic.v1.min.js\"></script>\n\n<!-- Tooltip style -->\n<style>\n.tooltip {\n  background-color: black;\n  border: none;\n  border-radius: 5px;\n  padding: 15px;\n  min-width: 400px;\n  text-align: left;\n  color: white;\n}\n</style>"}]},"apps":[],"jobName":"paragraph_1574169224139_-165171554","id":"20191119-081344_1435750143","dateCreated":"2019-11-19T08:13:44-0500","dateStarted":"2019-11-19T09:47:25-0500","dateFinished":"2019-11-19T09:47:25-0500","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5821"},{"text":"%python\nfrom numpy.random import seed\nfrom numpy.random import randint\n# seed random number generator\nseed(1)\nprint(\"%md **Randmo Library setup**\")","user":"anonymous","dateUpdated":"2019-11-19T10:25:06-0500","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":" **Randmo Library setup**\n"},{"type":"HTML","data":""}]},"apps":[],"jobName":"paragraph_1574171717514_-1883971253","id":"20191119-085517_245826642","dateCreated":"2019-11-19T08:55:17-0500","dateStarted":"2019-11-19T09:47:25-0500","dateFinished":"2019-11-19T09:47:26-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5822"},{"text":"%angular\n<div id=\"my_dataviz_simple\"></div>","user":"anonymous","dateUpdated":"2019-11-19T10:21:36-0500","config":{"colWidth":7,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":393.8,"optionOpen":false}}},"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/undefined","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div id=\"my_dataviz_simple\"></div>"}]},"apps":[],"jobName":"paragraph_1574169197113_-2117961688","id":"20191119-081317_818885635","dateCreated":"2019-11-19T08:13:17-0500","dateStarted":"2019-11-19T10:05:21-0500","dateFinished":"2019-11-19T10:05:21-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5823"},{"title":"Python Cod","text":"%python\nimport numpy as np\nimport re\nfrom random import sample\n\nvalues = randint(5, 45, 50)\nstring_value = re.sub('\\s+', \",\", str(values))\nstring_value = string_value.replace(\"[,\", \"[\")\nprint(\"%html <script> window.plot_data = \" + string_value + \" </script>\")\nprint(\"%html values: \" + string_value + \" </span>\")","user":"anonymous","dateUpdated":"2019-11-19T10:46:53-0500","config":{"colWidth":5,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true,"editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<script> window.plot_data = [26,41,7,14,16,40,44,34,25,25,14,12,10,30,24,21,33,23,22,9,8,24,10,43,15,13,17,39,29,24,40,39,27,30,28,43,16,18,43,16,26,20,9,23,9,16,41,32,20,6] </script>\n"},{"type":"HTML","data":"values: [26,41,7,14,16,40,44,34,25,25,14,12,10,30,24,21,33,23,22,9,8,24,10,43,15,13,17,39,29,24,40,39,27,30,28,43,16,18,43,16,26,20,9,23,9,16,41,32,20,6] </span>\n"},{"type":"HTML","data":""}]},"apps":[],"jobName":"paragraph_1574169648574_334219255","id":"20191119-082048_363002085","dateCreated":"2019-11-19T08:20:48-0500","dateStarted":"2019-11-19T10:46:53-0500","dateFinished":"2019-11-19T10:46:53-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5824"},{"title":"D3 visualization code","text":"%angular\n<script>\n\n// set the dimensions and margins of the graph\nvar margin = {top: 10, right: 30, bottom: 30, left: 40},\n  width = 400 - margin.left - margin.right,\n  height = 400 - margin.top - margin.bottom;\n  \n\n// Cleans up after prevoius graph\nif (svg ){\n svg.selectAll(\"toto\").remove()\n d3.select(\"#my_dataviz_simple\").html(\"\")\n}\n\n// append the svg object to the body of the page\nvar svg = d3.select(\"#my_dataviz_simple\")\n.append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n.append(\"g\")\n  .attr(\"transform\",\n        \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// create dummy data\nvar data = window.plot_data //[12,19,11,13,12,22,13,4,15,16,18,19,20,12,11,9]\n//var data = [12,19,11,13,12,22,13,4,15,16,18,19,20,12,11,9]\n\n// Compute summary statistics used for the box:\nvar data_sorted = data.sort(d3.ascending)\nvar q1 = d3.quantile(data_sorted, .25)\nvar median = d3.quantile(data_sorted, .5)\nvar q3 = d3.quantile(data_sorted, .75)\nvar interQuantileRange = q3 - q1\nvar min = data_sorted[0]//q1 - 1.5 * interQuantileRange\nvar max = data_sorted[data_sorted.length-1]//q1 + 1.5 * interQuantileRange\n\nconsole.log(max,min,interQuantileRange)\n\n// Show the Y scale\nvar y = d3.scaleLinear()\n  .domain([0,50])\n  .range([height, 0]);\nsvg.call(d3.axisLeft(y))\n\n// a few features for the box\nvar center = 200\nvar width = 100\n\n// Show the main vertical line\nsvg\n.append(\"line\")\n  .attr(\"x1\", center)\n  .attr(\"x2\", center)\n  .attr(\"y1\", y(min) )\n  .attr(\"y2\", y(max) )\n  .attr(\"stroke\", \"black\")\n\n// Show the box\nsvg\n.append(\"rect\")\n  .attr(\"x\", center - width/2)\n  .attr(\"y\", y(q3) )\n  .attr(\"height\", (y(q1)-y(q3)) )\n  .attr(\"width\", width )\n  .attr(\"stroke\", \"black\")\n  .style(\"fill\", \"#69b3a2\")\n\n// show median, min and max horizontal lines\nsvg\n.selectAll(\"toto\")\n.data([min, median, max])\n.enter()\n.append(\"line\")\n  .attr(\"x1\", center-width/2)\n  .attr(\"x2\", center+width/2)\n  .attr(\"y1\", function(d){ return(y(d))} )\n  .attr(\"y2\", function(d){ return(y(d))} )\n  .attr(\"stroke\", \"black\")\n</script>","user":"anonymous","dateUpdated":"2019-11-19T10:46:53-0500","config":{"colWidth":5,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/undefined","editorHide":true,"tableHide":false,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<script>\n\n// set the dimensions and margins of the graph\nvar margin = {top: 10, right: 30, bottom: 30, left: 40},\n  width = 400 - margin.left - margin.right,\n  height = 400 - margin.top - margin.bottom;\n  \n\n// Cleans up after prevoius graph\nif (svg ){\n svg.selectAll(\"toto\").remove()\n d3.select(\"#my_dataviz_simple\").html(\"\")\n}\n\n// append the svg object to the body of the page\nvar svg = d3.select(\"#my_dataviz_simple\")\n.append(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n.append(\"g\")\n  .attr(\"transform\",\n        \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// create dummy data\nvar data = window.plot_data //[12,19,11,13,12,22,13,4,15,16,18,19,20,12,11,9]\n//var data = [12,19,11,13,12,22,13,4,15,16,18,19,20,12,11,9]\n\n// Compute summary statistics used for the box:\nvar data_sorted = data.sort(d3.ascending)\nvar q1 = d3.quantile(data_sorted, .25)\nvar median = d3.quantile(data_sorted, .5)\nvar q3 = d3.quantile(data_sorted, .75)\nvar interQuantileRange = q3 - q1\nvar min = data_sorted[0]//q1 - 1.5 * interQuantileRange\nvar max = data_sorted[data_sorted.length-1]//q1 + 1.5 * interQuantileRange\n\nconsole.log(max,min,interQuantileRange)\n\n// Show the Y scale\nvar y = d3.scaleLinear()\n  .domain([0,50])\n  .range([height, 0]);\nsvg.call(d3.axisLeft(y))\n\n// a few features for the box\nvar center = 200\nvar width = 100\n\n// Show the main vertical line\nsvg\n.append(\"line\")\n  .attr(\"x1\", center)\n  .attr(\"x2\", center)\n  .attr(\"y1\", y(min) )\n  .attr(\"y2\", y(max) )\n  .attr(\"stroke\", \"black\")\n\n// Show the box\nsvg\n.append(\"rect\")\n  .attr(\"x\", center - width/2)\n  .attr(\"y\", y(q3) )\n  .attr(\"height\", (y(q1)-y(q3)) )\n  .attr(\"width\", width )\n  .attr(\"stroke\", \"black\")\n  .style(\"fill\", \"#69b3a2\")\n\n// show median, min and max horizontal lines\nsvg\n.selectAll(\"toto\")\n.data([min, median, max])\n.enter()\n.append(\"line\")\n  .attr(\"x1\", center-width/2)\n  .attr(\"x2\", center+width/2)\n  .attr(\"y1\", function(d){ return(y(d))} )\n  .attr(\"y2\", function(d){ return(y(d))} )\n  .attr(\"stroke\", \"black\")\n</script>"}]},"apps":[],"jobName":"paragraph_1574169283651_-359683678","id":"20191119-081443_1893723770","dateCreated":"2019-11-19T08:14:43-0500","dateStarted":"2019-11-19T10:46:53-0500","dateFinished":"2019-11-19T10:46:53-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5825"},{"text":"%angular\n\n<form class=\"form-inline\">\n  <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"z.runParagraph('20191119-081443_1893723770');z.runParagraph('20191119-082048_363002085');\"> Run Paragraphs</button>\n</form>\n\n","user":"anonymous","dateUpdated":"2019-11-19T10:46:50-0500","config":{"colWidth":5,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/undefined","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<form class=\"form-inline\">\n  <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"z.runParagraph('20191119-081443_1893723770');z.runParagraph('20191119-082048_363002085');\"> Run Paragraphs</button>\n</form>"}]},"apps":[],"jobName":"paragraph_1574177346800_2061588035","id":"20191119-102906_1291977369","dateCreated":"2019-11-19T10:29:06-0500","dateStarted":"2019-11-19T10:46:50-0500","dateFinished":"2019-11-19T10:46:50-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5826"},{"title":"More Box Plot Graphs","text":"%angular\n\n<!-- Create a div where the graph will take place -->\n<div id=\"my_dataviz\"></div>\n\n\n","user":"anonymous","dateUpdated":"2019-11-19T10:21:26-0500","config":{"colWidth":7,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/undefined","editorHide":true,"tableHide":false,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<!-- Create a div where the graph will take place -->\n<div id=\"my_dataviz\"></div>"}]},"apps":[],"jobName":"paragraph_1574168423554_27713234","id":"20191119-080023_924523323","dateCreated":"2019-11-19T08:00:23-0500","dateStarted":"2019-11-19T10:17:36-0500","dateFinished":"2019-11-19T10:17:36-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5827"},{"title":"Code for visualization.","text":"%angular\n<script>\n\n// set the dimensions and margins of the graph\nvar margin = {top: 10, right: 30, bottom: 50, left: 70},\n    width = 460 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\n// Cleans up after prevoius graph\nif (svg ){\n svg.selectAll(\"indPoints\").remove()\n d3.select(\"#my_dataviz\").html(\"\")\n}\n\n// append the svg object to the body of the page\nvar svg = d3.select(\"#my_dataviz\")\n  .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Read the data and compute summary statistics for each specie\nd3.csv(\"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/iris.csv\", function(data) {\n\n  // Compute quartiles, median, inter quantile range min and max --> these info are then used to draw the box.\n  var sumstat = d3.nest() // nest function allows to group the calculation per level of a factor\n    .key(function(d) { return d.Species;})\n    .rollup(function(d) {\n      q1 = d3.quantile(d.map(function(g) { return g.Sepal_Length;}).sort(d3.ascending),.25)\n      median = d3.quantile(d.map(function(g) { return g.Sepal_Length;}).sort(d3.ascending),.5)\n      q3 = d3.quantile(d.map(function(g) { return g.Sepal_Length;}).sort(d3.ascending),.75)\n      interQuantileRange = q3 - q1\n      min = q1 - 1.5 * interQuantileRange\n      max = q3 + 1.5 * interQuantileRange\n      return({q1: q1, median: median, q3: q3, interQuantileRange: interQuantileRange, min: min, max: max})\n    })\n    .entries(data)\n\n  // Show the Y scale\n  var y = d3.scaleBand()\n    .range([ height, 0 ])\n    .domain([\"setosa\", \"versicolor\", \"virginica\"])\n    .padding(.4);\n  svg.append(\"g\")\n    .call(d3.axisLeft(y).tickSize(0))\n    .select(\".domain\").remove()\n\n  // Show the X scale\n  var x = d3.scaleLinear()\n    .domain([4,8])\n    .range([0, width])\n  svg.append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x).ticks(5))\n    .select(\".domain\").remove()\n\n  // Color scale\n  var myColor = d3.scaleSequential()\n    .interpolator(d3.interpolateInferno)\n    .domain([4,8])\n\n  // Add X axis label:\n  svg.append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", width)\n      .attr(\"y\", height + margin.top + 30)\n      .text(\"Sepal Length\");\n\n  // Show the main vertical line\n  svg\n    .selectAll(\"vertLines\")\n    .data(sumstat)\n    .enter()\n    .append(\"line\")\n      .attr(\"x1\", function(d){return(x(d.value.min))})\n      .attr(\"x2\", function(d){return(x(d.value.max))})\n      .attr(\"y1\", function(d){return(y(d.key) + y.bandwidth()/2)})\n      .attr(\"y2\", function(d){return(y(d.key) + y.bandwidth()/2)})\n      .attr(\"stroke\", \"black\")\n      .style(\"width\", 40)\n\n  // rectangle for the main box\n  svg\n    .selectAll(\"boxes\")\n    .data(sumstat)\n    .enter()\n    .append(\"rect\")\n        .attr(\"x\", function(d){return(x(d.value.q1))}) // console.log(x(d.value.q1)) ;\n        .attr(\"width\", function(d){ ; return(x(d.value.q3)-x(d.value.q1))}) //console.log(x(d.value.q3)-x(d.value.q1))\n        .attr(\"y\", function(d) { return y(d.key); })\n        .attr(\"height\", y.bandwidth() )\n        .attr(\"stroke\", \"black\")\n        .style(\"fill\", \"#69b3a2\")\n        .style(\"opacity\", 0.3)\n\n  // Show the median\n  svg\n    .selectAll(\"medianLines\")\n    .data(sumstat)\n    .enter()\n    .append(\"line\")\n      .attr(\"y1\", function(d){return(y(d.key) + y.bandwidth()/2)})\n      .attr(\"y2\", function(d){return(y(d.key) + y.bandwidth()/2)})\n      .attr(\"x1\", function(d){return(x(d.value.median))})\n      .attr(\"x2\", function(d){return(x(d.value.median))})\n      .attr(\"stroke\", \"black\")\n      .style(\"width\", 80)\n\n  // create a tooltip\n  var tooltip = d3.select(\"#my_dataviz\")\n    .append(\"div\")\n      .style(\"opacity\", 0)\n      .attr(\"class\", \"tooltip\")\n      .style(\"font-size\", \"16px\")\n  // Three function that change the tooltip when user hover / move / leave a cell\n  var mouseover = function(d) {\n    tooltip\n      .transition()\n      .duration(200)\n      .style(\"opacity\", 1)\n    tooltip\n        .html(\"<span style='color:grey'>Sepal length: </span>\" + d.Sepal_Length) // + d.Prior_disorder + \"<br>\" + \"HR: \" +  d.HR)\n        .style(\"left\", (d3.mouse(this)[0]+30) + \"px\")\n        .style(\"top\", (d3.mouse(this)[1]+30) + \"px\")\n  }\n  var mousemove = function(d) {\n    tooltip\n      .style(\"left\", (d3.mouse(this)[0]+30) + \"px\")\n      .style(\"top\", (d3.mouse(this)[1]+30) + \"px\")\n  }\n  var mouseleave = function(d) {\n    tooltip\n      .transition()\n      .duration(200)\n      .style(\"opacity\", 0)\n  }\n\n  // Add individual points with jitter\n  var jitterWidth = 50\n  svg\n    .selectAll(\"indPoints\")\n    .data(data)\n    .enter()\n    .append(\"circle\")\n      .attr(\"cx\", function(d){ return(x(d.Sepal_Length))})\n      .attr(\"cy\", function(d){ return( y(d.Species) + (y.bandwidth()/2) - jitterWidth/2 + Math.random()*jitterWidth )})\n      .attr(\"r\", 4)\n      .style(\"fill\", function(d){ return(myColor(+d.Sepal_Length)) })\n      .attr(\"stroke\", \"black\")\n      .on(\"mouseover\", mouseover)\n      .on(\"mousemove\", mousemove)\n      .on(\"mouseleave\", mouseleave)\n\n\n})\n\n\n\n</script>","user":"anonymous","dateUpdated":"2019-11-19T10:22:54-0500","config":{"colWidth":5,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/undefined","editorHide":false,"tableHide":false,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<script>\n\n// set the dimensions and margins of the graph\nvar margin = {top: 10, right: 30, bottom: 50, left: 70},\n    width = 460 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\n// Cleans up after prevoius graph\nif (svg ){\n svg.selectAll(\"indPoints\").remove()\n d3.select(\"#my_dataviz\").html(\"\")\n}\n\n// append the svg object to the body of the page\nvar svg = d3.select(\"#my_dataviz\")\n  .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Read the data and compute summary statistics for each specie\nd3.csv(\"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/iris.csv\", function(data) {\n\n  // Compute quartiles, median, inter quantile range min and max --> these info are then used to draw the box.\n  var sumstat = d3.nest() // nest function allows to group the calculation per level of a factor\n    .key(function(d) { return d.Species;})\n    .rollup(function(d) {\n      q1 = d3.quantile(d.map(function(g) { return g.Sepal_Length;}).sort(d3.ascending),.25)\n      median = d3.quantile(d.map(function(g) { return g.Sepal_Length;}).sort(d3.ascending),.5)\n      q3 = d3.quantile(d.map(function(g) { return g.Sepal_Length;}).sort(d3.ascending),.75)\n      interQuantileRange = q3 - q1\n      min = q1 - 1.5 * interQuantileRange\n      max = q3 + 1.5 * interQuantileRange\n      return({q1: q1, median: median, q3: q3, interQuantileRange: interQuantileRange, min: min, max: max})\n    })\n    .entries(data)\n\n  // Show the Y scale\n  var y = d3.scaleBand()\n    .range([ height, 0 ])\n    .domain([\"setosa\", \"versicolor\", \"virginica\"])\n    .padding(.4);\n  svg.append(\"g\")\n    .call(d3.axisLeft(y).tickSize(0))\n    .select(\".domain\").remove()\n\n  // Show the X scale\n  var x = d3.scaleLinear()\n    .domain([4,8])\n    .range([0, width])\n  svg.append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x).ticks(5))\n    .select(\".domain\").remove()\n\n  // Color scale\n  var myColor = d3.scaleSequential()\n    .interpolator(d3.interpolateInferno)\n    .domain([4,8])\n\n  // Add X axis label:\n  svg.append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", width)\n      .attr(\"y\", height + margin.top + 30)\n      .text(\"Sepal Length\");\n\n  // Show the main vertical line\n  svg\n    .selectAll(\"vertLines\")\n    .data(sumstat)\n    .enter()\n    .append(\"line\")\n      .attr(\"x1\", function(d){return(x(d.value.min))})\n      .attr(\"x2\", function(d){return(x(d.value.max))})\n      .attr(\"y1\", function(d){return(y(d.key) + y.bandwidth()/2)})\n      .attr(\"y2\", function(d){return(y(d.key) + y.bandwidth()/2)})\n      .attr(\"stroke\", \"black\")\n      .style(\"width\", 40)\n\n  // rectangle for the main box\n  svg\n    .selectAll(\"boxes\")\n    .data(sumstat)\n    .enter()\n    .append(\"rect\")\n        .attr(\"x\", function(d){return(x(d.value.q1))}) // console.log(x(d.value.q1)) ;\n        .attr(\"width\", function(d){ ; return(x(d.value.q3)-x(d.value.q1))}) //console.log(x(d.value.q3)-x(d.value.q1))\n        .attr(\"y\", function(d) { return y(d.key); })\n        .attr(\"height\", y.bandwidth() )\n        .attr(\"stroke\", \"black\")\n        .style(\"fill\", \"#69b3a2\")\n        .style(\"opacity\", 0.3)\n\n  // Show the median\n  svg\n    .selectAll(\"medianLines\")\n    .data(sumstat)\n    .enter()\n    .append(\"line\")\n      .attr(\"y1\", function(d){return(y(d.key) + y.bandwidth()/2)})\n      .attr(\"y2\", function(d){return(y(d.key) + y.bandwidth()/2)})\n      .attr(\"x1\", function(d){return(x(d.value.median))})\n      .attr(\"x2\", function(d){return(x(d.value.median))})\n      .attr(\"stroke\", \"black\")\n      .style(\"width\", 80)\n\n  // create a tooltip\n  var tooltip = d3.select(\"#my_dataviz\")\n    .append(\"div\")\n      .style(\"opacity\", 0)\n      .attr(\"class\", \"tooltip\")\n      .style(\"font-size\", \"16px\")\n  // Three function that change the tooltip when user hover / move / leave a cell\n  var mouseover = function(d) {\n    tooltip\n      .transition()\n      .duration(200)\n      .style(\"opacity\", 1)\n    tooltip\n        .html(\"<span style='color:grey'>Sepal length: </span>\" + d.Sepal_Length) // + d.Prior_disorder + \"<br>\" + \"HR: \" +  d.HR)\n        .style(\"left\", (d3.mouse(this)[0]+30) + \"px\")\n        .style(\"top\", (d3.mouse(this)[1]+30) + \"px\")\n  }\n  var mousemove = function(d) {\n    tooltip\n      .style(\"left\", (d3.mouse(this)[0]+30) + \"px\")\n      .style(\"top\", (d3.mouse(this)[1]+30) + \"px\")\n  }\n  var mouseleave = function(d) {\n    tooltip\n      .transition()\n      .duration(200)\n      .style(\"opacity\", 0)\n  }\n\n  // Add individual points with jitter\n  var jitterWidth = 50\n  svg\n    .selectAll(\"indPoints\")\n    .data(data)\n    .enter()\n    .append(\"circle\")\n      .attr(\"cx\", function(d){ return(x(d.Sepal_Length))})\n      .attr(\"cy\", function(d){ return( y(d.Species) + (y.bandwidth()/2) - jitterWidth/2 + Math.random()*jitterWidth )})\n      .attr(\"r\", 4)\n      .style(\"fill\", function(d){ return(myColor(+d.Sepal_Length)) })\n      .attr(\"stroke\", \"black\")\n      .on(\"mouseover\", mouseover)\n      .on(\"mousemove\", mousemove)\n      .on(\"mouseleave\", mouseleave)\n\n\n})\n\n\n\n</script>"}]},"apps":[],"jobName":"paragraph_1574168440971_1920365914","id":"20191119-080040_604996833","dateCreated":"2019-11-19T08:00:40-0500","dateStarted":"2019-11-19T10:22:50-0500","dateFinished":"2019-11-19T10:22:50-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5828"},{"text":"%angular\n","user":"anonymous","dateUpdated":"2019-11-19T09:00:34-0500","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/undefined"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1574168775654_1904028906","id":"20191119-080615_2053842262","dateCreated":"2019-11-19T08:06:15-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5829"}],"name":"A to [Z]eppelin/d3 scatter plot","id":"2ES5SY58U","noteParams":{},"noteForms":{},"angularObjects":{},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}